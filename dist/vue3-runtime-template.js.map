{"version":3,"file":"vue3-runtime-template.js","sources":["../index.js"],"sourcesContent":["import { h, provide } from \"vue\";\n\nconst defineDescriptor = (src, dest, name) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!dest.hasOwnProperty(name)) {\n    const descriptor = Object.getOwnPropertyDescriptor(src, name);\n    Object.defineProperty(dest, name, descriptor);\n  }\n};\n\nconst merge = (objs) => {\n  const res = {};\n  objs.forEach((obj) => {\n    obj &&\n      Object.getOwnPropertyNames(obj).forEach((name) =>\n        defineDescriptor(obj, res, name)\n      );\n  });\n  return res;\n};\n\nconst buildFromProps = (obj, props) => {\n  const res = {};\n  props.forEach((prop) => defineDescriptor(obj, res, prop));\n  return res;\n};\n\nexport default {\n  props: {\n    template: String,\n    parent: Object,\n    templateProps: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props) {\n    Object.keys(props.templateProps).forEach((key) => {\n      provide(key, props.templateProps[key]);\n    });\n  },\n  render() {\n    if (this.template) {\n      const parent = this.parent || this.$parent;\n      const {\n        $data: parentData = {},\n        $props: parentProps = {},\n        $options: parentOptions = {},\n      } = parent;\n      const {\n        components: parentComponents = {},\n        computed: parentComputed = {},\n        methods: parentMethods = {},\n      } = parentOptions;\n      const {\n        $data = {},\n        $props = {},\n        $options: { methods = {}, computed = {}, components = {} } = {},\n      } = this;\n      const passthrough = {\n        $data: {},\n        $props: {},\n        $options: {},\n        components: {},\n        computed: {},\n        methods: {},\n      };\n\n      // build new objects by removing keys if already exists (e.g. created by mixins)\n      Object.keys(parentData).forEach((e) => {\n        if (typeof $data[e] === \"undefined\") {\n          passthrough.$data[e] = parentData[e];\n        }\n      });\n      Object.keys(parentProps).forEach((e) => {\n        if (typeof $props[e] === \"undefined\") {\n          passthrough.$props[e] = parentProps[e];\n        }\n      });\n      Object.keys(parentMethods).forEach((e) => {\n        if (typeof methods[e] === \"undefined\") {\n          passthrough.methods[e] = parentMethods[e];\n        }\n      });\n      Object.keys(parentComputed).forEach((e) => {\n        if (typeof computed[e] === \"undefined\") {\n          passthrough.computed[e] = parentComputed[e];\n        }\n      });\n      Object.keys(parentComponents).forEach((e) => {\n        if (typeof components[e] === \"undefined\") {\n          passthrough.components[e] = parentComponents[e];\n        }\n      });\n\n      const methodKeys = Object.keys(passthrough.methods || {});\n      const dataKeys = Object.keys(passthrough.$data || {});\n      const propKeys = Object.keys(passthrough.$props || {});\n      const templatePropKeys = Object.keys(this.templateProps);\n      const allKeys = dataKeys\n        .concat(propKeys)\n        .concat(methodKeys)\n        .concat(templatePropKeys);\n      const methodsFromProps = buildFromProps(parent, methodKeys);\n      const finalProps = merge([\n        passthrough.$data,\n        passthrough.$props,\n        methodsFromProps,\n        this.templateProps,\n      ]);\n\n      const provide = this.$parent.$.provides ? this.$parent.$.provides : {}; // Avoids Vue warning\n\n      const dynamic = {\n        template: this.template || \"<div></div>\",\n        props: allKeys,\n        computed: passthrough.computed,\n        components: passthrough.components,\n        // provide: provide,\n      };\n      // debugger;\n\n      return h(dynamic, { ...finalProps });\n    }\n  },\n};\n"],"names":["defineDescriptor","src","dest","name","hasOwnProperty","const","descriptor","Object","getOwnPropertyDescriptor","defineProperty","props","template","String","parent","templateProps","type","default","setup","keys","forEach","key","provide","render","this","$parent","passthrough","$data","$props","$options","components","computed","methods","parentData","e","parentProps","parentMethods","parentComputed","parentComponents","methodKeys","dataKeys","propKeys","templatePropKeys","allKeys","concat","methodsFromProps","obj","res","prop","finalProps","objs","getOwnPropertyNames","merge","h"],"mappings":"qBAEMA,WAAoBC,EAAKC,EAAMC,GAEnC,IAAKD,EAAKE,eAAeD,GAAO,CAC9BE,IAAMC,EAAaC,OAAOC,yBAAyBP,EAAKE,GACxDI,OAAOE,eAAeP,EAAMC,EAAMG,OAqBvB,CACbI,MAAO,CACLC,SAAUC,OACVC,OAAQN,OACRO,cAAe,CACbC,KAAMR,OACNS,+BAGJC,eAAMP,GACJH,OAAOW,KAAKR,EAAMI,eAAeK,iBAASC,GACxCC,UAAQD,EAAKV,EAAMI,cAAcM,OAGrCE,kBACE,GAAIC,KAAKZ,SAAU,CACjBN,IAAMQ,EAASU,KAAKV,QAAUU,KAAKC,iCAEb,kCACE,oCACI,sCAGK,oCACJ,mCACF,UAMvBD,0BAHM,UAGNA,2BAFO,UAEPA,6BAD2D,IAAnD,+BAAY,oCAAe,sCAAiB,IAExDlB,IAAMoB,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,QAAS,IAIXxB,OAAOW,KAAKc,GAAYb,iBAASc,QACP,IAAbP,EAAMO,KACfR,EAAYC,MAAMO,GAAKD,EAAWC,MAGtC1B,OAAOW,KAAKgB,GAAaf,iBAASc,QACP,IAAdN,EAAOM,KAChBR,EAAYE,OAAOM,GAAKC,EAAYD,MAGxC1B,OAAOW,KAAKiB,GAAehB,iBAASc,QACR,IAAfF,EAAQE,KACjBR,EAAYM,QAAQE,GAAKE,EAAcF,MAG3C1B,OAAOW,KAAKkB,GAAgBjB,iBAASc,QACR,IAAhBH,EAASG,KAClBR,EAAYK,SAASG,GAAKG,EAAeH,MAG7C1B,OAAOW,KAAKmB,GAAkBlB,iBAASc,QACR,IAAlBJ,EAAWI,KACpBR,EAAYI,WAAWI,GAAKI,EAAiBJ,MAIjD5B,IAAMiC,EAAa/B,OAAOW,KAAKO,EAAYM,SAAW,IAChDQ,EAAWhC,OAAOW,KAAKO,EAAYC,OAAS,IAC5Cc,EAAWjC,OAAOW,KAAKO,EAAYE,QAAU,IAC7Cc,EAAmBlC,OAAOW,KAAKK,KAAKT,eACpC4B,EAAUH,EACbI,OAAOH,GACPG,OAAOL,GACPK,OAAOF,GACJG,GAlFYC,EAkFsBhC,EAjFtCiC,EAAM,GAiFwCR,EAhF9CnB,iBAAS4B,UAAS/C,EAAiB6C,EAAKC,EAAKC,KAC5CD,GAgFGE,WA9FGC,GACb5C,IAAMyC,EAAM,GAOZ,OANAG,EAAK9B,iBAAS0B,GACZA,GACEtC,OAAO2C,oBAAoBL,GAAK1B,iBAAShB,UACvCH,EAAiB6C,EAAKC,EAAK3C,OAG1B2C,EAsFgBK,CAAM,CACvB1B,EAAYC,MACZD,EAAYE,OACZiB,EACArB,KAAKT,gBAcP,OAAOsC,IATS,CACdzC,SAAUY,KAAKZ,UAAY,cAC3BD,MAAOgC,EACPZ,SAAUL,EAAYK,SACtBD,WAAYJ,EAAYI,YAKRtB,iBAAKyC,QArGLH,EAChBC"}